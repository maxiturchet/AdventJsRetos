// El Grinch est√° abriendo las cartas que iban a Santa Claus y las est√° dejando hechas un l√≠o. üò±

// Las cartas son una cadena de texto que incluyen regalos y par√©ntesis ().

// Para saber si una carta es v√°lida ‚úÖ, debes comprobar que los par√©ntesis cierran correctamente y que, adem√°s, no vayan vac√≠os.

// ¬°Pero ojo! Porque el Grinch ha dejado llaves { y corchetes [ dentro de los par√©ntesis que hacen que no sean v√°lidas. Por suerte s√≥lo los ha dejado en medio de los par√©ntesis...

// Ejemplos:

// "bici coche (bal√≥n) bici coche peluche" // -> ‚úÖ
// "(mu√±eca) consola bici" // ‚úÖ

// "bici coche (bal√≥n bici coche" // -> ‚ùå
// "peluche (bici [coche) bici coche bal√≥n" // -> ‚ùå
// "(peluche {) bici" // -> ‚ùå
// "() bici" // ‚ùå

// Crea una funci√≥n que pas√°ndole el texto de la carta, devuelva true si es v√°lida y false si no lo es. ¬°Y acaba con la travesura del Grinch!

function isValid(letter) {
  const parentesis = letter.indexOf('(')
  const parentesis2 = letter.indexOf(')')

  if(parentesis === -1 || parentesis2 === -1 || parentesis > parentesis2){
    return false
  }else{
    const carta = letter.substring(parentesis,parentesis2+1)
    console.log(carta)
    if (carta.includes('()') || carta.includes('{') || carta.includes('[') || carta.includes(']') || carta.includes('}') )
      return false
    }
  return true
}

isValid('bici coche (bal√≥n) bici coche peluche')
isValid("(mu√±eca) consola bici")
isValid("bici coche (bal√≥n bici coche")
isValid("peluche (bici [coche) bici coche bal√≥n")
isValid("(peluche {) bici")
isValid("() bici")
